package com.amazon.market.entity;
// Generated Apr 2, 2018 7:38:37 PM by Hibernate Tools 5.2.8.Final

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.ForeignKey;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;

import java.util.Date;

import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.Lob;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * Products generated by hbm2java
 */
@Entity
@Table(name = "products")
public class Products implements java.io.Serializable {

	private Long id;
	private long categoryId;
	private String productName;
	private String productDescription;
	private long subCategoryId;
	private double price;
	private byte[] productImage;
	private int owner;
	private boolean availability;
	private LocationZones location;
	private Date addedTime;
	

	public Products() {
	}

	public Products(long categoryId, String productName, String productDescription, long subCategoryId, int price,
			byte[] productImage) {
		this.categoryId = categoryId;
		this.productName = productName;
		this.productDescription = productDescription;
		this.subCategoryId = subCategoryId;
		this.price = price;
		this.productImage = productImage;
		
	}
	
	public Products(long categoryId, String productName, String productDescription, long subCategoryId, int price,
			byte[] productImage, boolean flag,Date date) {
		this.categoryId = categoryId;
		this.productName = productName;
		this.productDescription = productDescription;
		this.subCategoryId = subCategoryId;
		this.price = price;
		this.productImage = productImage;
		this.availability = flag;
		this.addedTime = date;
	}
	
	public Products(long categoryId, String productName, String productDescription, long subCategoryId, int price,
			byte[] productImage, boolean flag,Date date,LocationZones location) {
		this.categoryId = categoryId;
		this.productName = productName;
		this.productDescription = productDescription;
		this.subCategoryId = subCategoryId;
		this.price = price;
		this.productImage = productImage;
		this.availability = flag;
		this.addedTime = date;
		this.location = location;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "Id", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@Column(name = "Category_Id", nullable = false)
	public long getCategoryId() {
		return this.categoryId;
	}

	public void setCategoryId(long categoryId) {
		this.categoryId = categoryId;
	}

	@Column(name = "Product_Name", nullable = false, length = 100)
	public String getProductName() {
		return this.productName;
	}

	public void setProductName(String productName) {
		this.productName = productName;
	}

	@Column(name = "Product_Description", nullable = false, length = 65535)
	public String getProductDescription() {
		return this.productDescription;
	}

	public void setProductDescription(String productDescription) {
		this.productDescription = productDescription;
	}

	@Column(name = "Sub_Category_Id", nullable = false)
	public long getSubCategoryId() {
		return this.subCategoryId;
	}

	public void setSubCategoryId(long subCategoryId) {
		this.subCategoryId = subCategoryId;
	}

	@Column(name = "Price", nullable = false)
	public double getPrice() {
		return this.price;
	}

	public void setPrice(double price) {
		this.price = price;
	}
	@Lob
	@Column(name = "Product_Image", length = Integer.MAX_VALUE, nullable = true)
	public byte[] getProductImage() {
		return this.productImage;
	}

	public void setProductImage(byte[] productImage) {
		this.productImage = productImage;
	}
	
	@Column(name = "Owner", nullable = false)
	public int getOwner() {
		return this.owner;
	}

	public void setOwner(int uid) {
		this.owner = uid;
	}
	
	@Column(name = "Availability", nullable = false)
	public boolean getAvailability() {
		return this.availability;
	}

	public void setAvailability(boolean flag) {
		this.availability = flag;
	}
	
	//@Column(name = "Location", nullable = false)
	@ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "Location", nullable = false, //
    foreignKey = @ForeignKey(name = "LOCATION_DETAIL_FK") )
	public LocationZones getLocation() {
		return this.location;
	}

	
	public void setLocation(LocationZones loc) {
		this.location = loc;
	}
	
	@Column(name = "Added_Time", nullable = false)
	public Date getAddedTime() {
		return this.addedTime;
	}

	public void setAddedTime(Date date) {
		this.addedTime = date;
	}
	
}
